<?php

/**
 * @file
 * Module related hooks.
 */

use Drupal\Core\Entity\EntityInterface;

/**
 * Implements hook_theme().
 */
function vactory_sondage_theme($existing, $type, $theme, $path) {
  return [
    'vactory_sondage_radio_option' => [
      'template' => 'sondage-radio-option',
      'variables' => [
        'option' => NULL,
      ],
    ],
    'vactory_sondage_state' => [
      'template' => 'sondage-state',
      'variables' => [
        'statistics' => NULL,
      ],
    ],
    'block__block_content__vactory_sondage' => [
      'base hook' => 'block',
      'template' => 'vactory-sondage-block',
    ],
  ];
}

/**
 * Implements hook_entity_presave().
 */
function vactory_sondage_entity_presave(EntityInterface $entity) {
  if ($entity->getEntityTypeId() === 'block_content' && $entity->bundle() === 'vactory_sondage' && $entity->isNew()) {
    $status = $entity->get('field_sondage_status')->value;
    if ($status === NULL) {
      // By default make sondage opened.
      $entity->set('field_sondage_status', 1);
    }
    $reminder_manager = Drupal::service('vactory_reminder.queue.manager');
    $extra_data = [
      'entity_type' => $entity->getEntityTypeId(),
      'entity_id' => $entity->id(),
      'date_field_name' => 'field_sondage_close_date',
    ];
    $reminder_manager->reminderQueuePush('vactory_sondage_closer', 'sondage_closer', $extra_data);
  }
}
