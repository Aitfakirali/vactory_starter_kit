<?php

/**
 * @file
 * Primary module hooks for vactory FAQ module.
 */

use Drupal\views\ViewExecutable;
use Symfony\Component\HttpKernel\Exception\NotFoundHttpException;

/**
 * Implements hook_theme().
 */
function vactory_faq_prive_theme() {
  return [
    // Node > card.
    'node__vactory_faq_prive__card' => [
      'base hook' => 'node',
      'template'  => 'card',
    ],
     // Node > Mur.
    'node__vactory_faq_prive__mur' => [
      'base hook' => 'node',
      'template'  => 'mur',
    ],
    'views_view_fields__vactory_faq_prive' => [
      'base hook' => 'views_view_fields',
      'template'  => 'views-view-fields--vactory-faq-prive',
    ],
    'views_view__vactory_faq_prive' => [
      'base hook' => 'views_view',
      'template'  => 'views-views--vactory-faq-prive',
    ],
  ];
}

/**
 * Implements hook_theme_suggestions_alter().
 */
function vactory_faq_prive_theme_suggestions_alter(array &$suggestions, array $variables, $hook) {
  if ($hook == 'views_view_fields') {
    $suggestions[] = $hook . '__' . $variables['view']->storage->id();
    $suggestions[] = $hook . '__' . $variables['view']->storage->id() . '__' . $variables['view']->current_display;
  }
}

/**
 * Implements hook_views_pre_render().
 */
function vactory_faq_prive_views_pre_render(ViewExecutable $view) {
  if ($view->id() == 'vactory_faq_prive') {
    foreach ($view->result as $key => $result) {
      $is_accessible = Drupal::service('vactory_faq_prive.access_manager')->isAccessible($result->_entity);
      if (!$is_accessible) {
        unset($view->result[$key]);
      }
    }
  }
}

/**
 * Implements hook_preprocess_HOOK().
 */
function vactory_faq_prive_preprocess_node(&$variables) {
  $node = $variables['node'];
  if ($node->bundle() === 'vactory_faq_prive') {
    $is_accessible = Drupal::service('vactory_faq_prive.access_manager')->isAccessible($node);
    if (!$is_accessible) {
      throw new NotFoundHttpException();
    }
  }
}
