{#
/**
 * @file
 * Theme override to display a node.
 *
 * Available variables:
 * - node: The node entity with limited access to object properties and methods.
     Only "getter" methods (method names starting with "get", "has", or "is")
     and a few common methods such as "id" and "label" are available. Calling
     other methods (such as node.delete) will result in an exception.
 * - label: The title of the node.
 * - content: All node items. Use {{ content }} to print them all,
 *   or print a subset such as {{ content.field_example }}. Use
 *   {{ content|without('field_example') }} to temporarily suppress the printing
 *   of a given child element.
 * - author_picture: The node author user entity, rendered using the "compact"
 *   view mode.
 * - metadata: Metadata for this node.
 * - date: Themed creation date field.
 * - author_name: Themed author name field.
 * - url: Direct URL of the current node.
 * - display_submitted: Whether submission information should be displayed.
 * - attributes: HTML attributes for the containing element.
 *   The attributes.class element may contain one or more of the following
 *   classes:
 *   - node: The current template type (also known as a "theming hook").
 *   - node--type-[type]: The current node type. For example, if the node is an
 *     "Article" it would result in "node--type-article". Note that the machine
 *     name will often be in a short form of the human readable label.
 *   - node--view-mode-[view_mode]: The View Mode of the node; for example, a
 *     teaser would result in: "node--view-mode-teaser", and
 *     full: "node--view-mode-full".
 *   The following are controlled through the node publishing options.
 *   - node--promoted: Appears on nodes promoted to the front page.
 *   - node--sticky: Appears on nodes ordered above other non-sticky nodes in
 *     teaser listings.
 *   - node--unpublished: Appears on unpublished nodes visible only to site
 *     admins.
 * - title_attributes: Same as attributes, except applied to the main title
 *   tag that appears in the template.
 * - content_attributes: Same as attributes, except applied to the main
 *   content tag that appears in the template.
 * - author_attributes: Same as attributes, except applied to the author of
 *   the node tag that appears in the template.
 * - title_prefix: Additional output populated by modules, intended to be
 *   displayed in front of the main title tag that appears in the template.
 * - title_suffix: Additional output populated by modules, intended to be
 *   displayed after the main title tag that appears in the template.
 * - view_mode: View mode; for example, "teaser" or "full".
 * - teaser: Flag for the teaser state. Will be true if view_mode is 'teaser'.
 * - page: Flag for the full page state. Will be true if view_mode is 'full'.
 * - readmore: Flag for more state. Will be true if the teaser content of the
 *   node cannot hold the main body content.
 * - logged_in: Flag for authenticated user status. Will be true when the
 *   current user is a logged-in member.
 * - is_admin: Flag for admin user status. Will be true when the current user
 *   is an administrator.
 *
 * @see template_preprocess_node()
 *
 * @todo Remove the id attribute (or make it a class), because if that gets
 *   rendered twice on a page this is invalid CSS for example: two lists
 *   in different view modes.
 */
#}
{% set bundle = node.bundle|clean_class %}
{% set classes = [
  'node',
  bundle,
  node.isPromoted() ? bundle ~ '--promoted',
  node.isSticky() ? bundle ~ '--sticky',
  not node.isPublished() ? bundle ~ '--unpublished',
  view_mode ? bundle ~ '--' ~ view_mode|clean_class,
] %}
{{ attach_library('classy/node') }}
<article{{ attributes.addClass(classes) }}>
  <div class="page-header">
    {{ title_prefix }}
    <h1 {{ title_attributes }}>
      {{ label }}
    </h1>

    <div class="meta d-flex align-items-center">
      <div class="date ml-1 mr-1">
        <small class="text-muted">
          {% if node.field_vactory_forum_status.value == "1" %}
            <span class="badge badge-pill badge-success p-2 mr-1" title="Forum actif"> </span>
          {% else %}
            <span class="badge badge-pill badge-secondary p-2 mr-1" title="Forum fermÃ©"> </span>
          {% endif %}
          {{ noWrapper(hideLabel(addAttributes(content.field_vactory_date))) }} |
          {{ noWrapper(content.field_vactory_forum_room) }}
        </small>
      </div>
    </div>
    {{ title_suffix }}
  </div>

  <hr/>
  <h6 class="card-subtitle mb-2">
    {% for key,thematic in content.field_vactory_forums_thematic %}
      {% if key matches '/^\\d+$/' %}
        <span class="badge badge-primary">{{ content.field_vactory_forums_thematic[key] }}</span>
      {% endif %}
    {% endfor %}
  </h6>
  {% if content.field_vactory_media.0 is defined %}
    {% set image_alt = content.field_vactory_media.0['#item'].alt %}
    {% set image_title = content.field_vactory_media.0['#item'].title %}
    {% set image = get_image_info(content.field_vactory_media.0['#item'].target_id) %}
    {% if image %}
      <div class="featured-img text-center mb-4">
        <img src="{{ image.url }}" alt="{{ image_alt }}" title="{{ image_title }}" width="940">
      </div>
    {% endif %}
  {% endif %}

  <div class="content">
    {{ hideLabel(addAttributes(content.body)) }}
  </div>

  <div class="pt-4">
    {% if content.comment.0 is defined  %}
      {{ content.comment }}
    {% endif %}
  </div>

</article>
