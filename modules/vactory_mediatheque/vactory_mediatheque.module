<?php

/**
 * @file
 * This was auto-generated by Vactory Generator module.
 */

use Drupal\Core\Form\FormStateInterface;
use Drupal\taxonomy\Entity\Term;

/**
 * Implements hook_theme().
 */
function vactory_mediatheque_theme() {
  return [
    // Node > card.
    'node__vactory_mediatheque__card' => [
      'base hook' => 'node',
      'template'  => 'card',
    ],
    // Node > full.
    'node__vactory_mediatheque__full' => [
      'base hook' => 'node',
      'template'  => 'full',
    ],
    // Block > year.
    'block_year_filter' => [
      'template' => 'block-filter-year',
      'variables' => [
        'years' => NULL,
        'current_active_year' => NULL,
      ],
    ],
    // View > MediathÃ¨que.
    'vactory__views_view__mediatheque' => [
      'template' => 'mediatheque-view',
      'base hook' => 'views_view',
    ],
  ];
}

/**
 * Implements hook_suggestions_views_view_alter().
 */
function vactory_mediatheque_theme_suggestions_views_view_alter(array &$suggestions, array $variables) {
  if (!empty($variables['view']->id())) {
    $suggestions[] = 'vactory__views_view__' . $variables['view']->id();
  }
}

/**
 * Implements hook_form_alter().
 */
function vactory_mediatheque_form_alter(&$form, FormStateInterface $form_state, $form_id) {
  if ($form['#id'] == 'views-exposed-form-mediatheque-page-1') {
    $form['#attached']['library'][] = 'vactory_mediatheque/vactory_mediatheque.term_generator';
  }
  if ($form['#id'] == 'views-exposed-form-mediatheque-medium-listing-by-year') {
    $form['field_medium_year_target_id']['#attributes'] = ['style' => ['display:none;']];
    $form['actions']['#attributes'] = ['style' => ['display:none;']];
  }
}

/**
 * Implements hook_node_presave().
 */
function vactory_mediatheque_node_presave($node) {
  if ($node->bundle() == 'vactory_mediatheque' && isset($node->get('field_mediatheque_date')->getValue()[0]) && !empty($node->get('field_mediatheque_date')->getValue()[0])) {
    $year = date('Y', strtotime($node->get('field_mediatheque_date')[0]->getValue()['value']));
    $properties = [
      'vid' => 'medium_year',
    ];
    $terms = \Drupal::entityTypeManager()->getStorage('taxonomy_term')->loadByProperties($properties);
    $years = [];
    if (!empty($terms)) {
      foreach ($terms as $item) {
        $years[$item->id()] = $item->getName();
      }
    }
    if (!in_array($year, $years)) {
      $term = Term::create([
        'name'   => $year,
        'vid'    => 'medium_year',
      ]);
      $term->save();
    }
    else {
      // Term already exist.
      $tid = array_search($year, $years);
      $term = Term::load($tid);
    }
    $node->set('field_medium_year', $term);
  }
}

/**
 * Implements hook_preprocess_HOOK().
 */
function vactory_mediatheque_preprocess_node__vactory_mediatheque__card(&$variables) {
  if (isset($variables['content']['field_mediatheque_video'][0]) && !empty($variables['content']['field_mediatheque_video'][0])) {
    $youtube_url = $variables['content']['field_mediatheque_video'][0]['#media']->get('field_media_oembed_video')->getValue()[0]['value'];
    parse_str(parse_url($youtube_url, PHP_URL_QUERY), $youtube_id);
    $variables['content']['youtube_id'] = $youtube_id['v'];
  }
}
